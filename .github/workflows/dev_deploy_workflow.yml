name: deploy workflow

on:
  push:
    branches:
      - release
  pull_request:
    branches:
      - release
    types:
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: copy project
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete
          remote_path: /home/ubuntu/app/profanity-filter-api
          remote_host: ${{ secrets.DEV_SERVER_IP }}
          remote_port: ${{ secrets.DEV_SERVER_PORT }}
          remote_user: ubuntu
          remote_key: ${{ secrets.DEV_SSH_KEY }}

      ## deploy setup
      - name: deploy setup and gradle build
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_IP }}
          port: ${{ secrets.DEV_SERVER_PORT }}
          username: ubuntu
          key: ${{ secrets.DEV_SSH_KEY }}
          script: |
            cd /home/ubuntu/app/profanity-filter-api
            touch  /home/ubuntu/app/profanity-filter-api/module-api/src/main/resources/application-prod.yml
            touch  /home/ubuntu/app/profanity-filter-api/module-core/src/main/resources/application-prod.yml
            touch  /home/ubuntu/app/profanity-filter-api/module-domain/src/main/resources/application-prod.yml
            echo "${{ secrets.APPLICATION_PROD }}" | base64 --decode > module-api/src/main/resources/application-prod.yml  
            echo "${{ secrets.APPLICATION_PROD }}" | base64 --decode > module-core/src/main/resources/application-prod.yml  
            echo "${{ secrets.APPLICATION_PROD }}" | base64 --decode > module-domain/src/main/resources/application-prod.yml  
            chmod +x gradlew
            ./gradlew build -x test

        ## deploy script
      - name: Run deploy script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_SERVER_IP }}
          port: ${{ secrets.DEV_SERVER_PORT }}
          username: ubuntu
          key: ${{ secrets.DEV_SSH_KEY }}
          script: |
            cd /home/ubuntu/app/profanity-filter-api/script
            chmod +x deploy.sh
            ./deploy.sh
